"""new_booking_table

Revision ID: f66cba0b8f17
Revises: b7ddd26f4423
Create Date: 2022-04-11 12:30:53.606479

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f66cba0b8f17'
down_revision = 'b7ddd26f4423'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('booking', sa.Column('scheduling_clerk', sa.String(), nullable=True))
    op.add_column('booking', sa.Column('clerk_phone', sa.String(), nullable=True))
    op.drop_index('ix_booking_name', table_name='booking')
    op.drop_column('booking', 'file')
    op.drop_column('booking', 'requested_by')
    op.drop_column('booking', 'status')
    op.drop_column('booking', 'case_name')
    op.drop_column('booking', 'name')
    op.drop_column('booking', 'federal')
    op.drop_column('booking', 'interpret_for')
    op.drop_column('booking', 'location_id')
    op.drop_column('booking', 'reason')
    op.drop_column('booking', 'method_of_appearance')
    op.drop_column('booking', 'room')
    op.drop_column('booking', 'registry')
    op.drop_column('booking', 'comment')
    op.drop_column('booking', 'language_name')
    op.drop_column('booking', 'prosecutor')
    op.add_column('booking_dates', sa.Column('start_time', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('finish_time', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('actual_start_time', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('actual_finish_time', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('approvers_initials', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('cancellation_reason', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('cancellation_comment', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('cancellation_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('booking_dates', sa.Column('cancellation_time', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('cancellation_fee', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('case_name', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('comment', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('prosecutor', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('reason', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('registry', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('room', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('file', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('federal', sa.Boolean(), nullable=False))
    op.add_column('booking_dates', sa.Column('languages', sa.String(), nullable=True))
    op.add_column('booking_dates', sa.Column('location_id', sa.Integer(), nullable=True))
    op.add_column('booking_dates', sa.Column('method_of_appearance', postgresql.ENUM('In-Person', 'MS Teams', 'Via Teleconference', 'RIS', name='booking_method_of_appearance'), server_default='In-Person', nullable=False))
    op.add_column('booking_dates', sa.Column('requested_by', postgresql.ENUM('Court', 'Crown', 'Applicant', 'Defence', 'Respondent', name='booking_requested_by'), server_default='Court', nullable=False))
    op.add_column('booking_dates', sa.Column('status', postgresql.ENUM('Pending', 'Booked', 'Cancelled', name='booking_status'), server_default='Pending', nullable=False))
    op.drop_column('booking_dates', 'period')
    op.drop_column('booking_dates', 'arrivalTime')
    op.drop_index('ix_court_location_name', table_name='court_location')
    op.create_unique_constraint('court_location_name_key', 'court_location', ['name'])
    op.drop_index('ix_language_name', table_name='language')
    op.create_unique_constraint('language_name_key', 'language', ['name'])
    op.drop_index('ix_oidcuser_sub', table_name='oidcuser')
    op.create_unique_constraint('oidcuser_sub_key', 'oidcuser', ['sub'])
    op.drop_index('ix_role_role_name', table_name='role')
    op.create_unique_constraint('role_role_name_key', 'role', ['role_name'])
    op.drop_index('ix_user_username', table_name='user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.drop_constraint('role_role_name_key', 'role', type_='unique')
    op.create_index('ix_role_role_name', 'role', ['role_name'], unique=False)
    op.drop_constraint('oidcuser_sub_key', 'oidcuser', type_='unique')
    op.create_index('ix_oidcuser_sub', 'oidcuser', ['sub'], unique=False)
    op.drop_constraint('language_name_key', 'language', type_='unique')
    op.create_index('ix_language_name', 'language', ['name'], unique=False)
    op.drop_constraint('court_location_name_key', 'court_location', type_='unique')
    op.create_index('ix_court_location_name', 'court_location', ['name'], unique=False)
    op.add_column('booking_dates', sa.Column('arrivalTime', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking_dates', sa.Column('period', postgresql.ENUM('MORNING', 'AFTERNOON', 'WHOLE_DAY', name='booking_period'), server_default=sa.text("'WHOLE_DAY'::booking_period"), autoincrement=False, nullable=False))
    op.drop_column('booking_dates', 'status')
    op.drop_column('booking_dates', 'requested_by')
    op.drop_column('booking_dates', 'method_of_appearance')
    op.drop_column('booking_dates', 'location_id')
    op.drop_column('booking_dates', 'languages')
    op.drop_column('booking_dates', 'federal')
    op.drop_column('booking_dates', 'file')
    op.drop_column('booking_dates', 'room')
    op.drop_column('booking_dates', 'registry')
    op.drop_column('booking_dates', 'reason')
    op.drop_column('booking_dates', 'prosecutor')
    op.drop_column('booking_dates', 'comment')
    op.drop_column('booking_dates', 'case_name')
    op.drop_column('booking_dates', 'cancellation_fee')
    op.drop_column('booking_dates', 'cancellation_time')
    op.drop_column('booking_dates', 'cancellation_date')
    op.drop_column('booking_dates', 'cancellation_comment')
    op.drop_column('booking_dates', 'cancellation_reason')
    op.drop_column('booking_dates', 'approvers_initials')
    op.drop_column('booking_dates', 'actual_finish_time')
    op.drop_column('booking_dates', 'actual_start_time')
    op.drop_column('booking_dates', 'finish_time')
    op.drop_column('booking_dates', 'start_time')
    op.add_column('booking', sa.Column('prosecutor', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('language_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('registry', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('room', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('method_of_appearance', postgresql.ENUM('In-Person', 'MS Teams', 'Via Teleconference', 'RIS', name='booking_method_of_appearance'), server_default=sa.text("'In-Person'::booking_method_of_appearance"), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('interpret_for', postgresql.ENUM('Witness', 'Party', 'Accused', name='booking_interpret_for'), server_default=sa.text("'Witness'::booking_interpret_for"), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('federal', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('case_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('status', postgresql.ENUM('Pending', 'Booked', 'Cancelled', name='booking_status'), server_default=sa.text("'Pending'::booking_status"), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('requested_by', postgresql.ENUM('Court', 'Crown', 'Applicant', 'Defence', 'Respondent', name='booking_requested_by'), server_default=sa.text("'Court'::booking_requested_by"), autoincrement=False, nullable=False))
    op.add_column('booking', sa.Column('file', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index('ix_booking_name', 'booking', ['name'], unique=False)
    op.drop_column('booking', 'clerk_phone')
    op.drop_column('booking', 'scheduling_clerk')
    # ### end Alembic commands ###
