name: deploy document for api
on:
  push:
    branches:
      - "backend"
      - "backend/**"
jobs:
  node-docker:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10-alpine
        env:
          POSTGRES_DATABASE: nest_api_dev
          POSTGRES_USER: court_nestapi
          POSTGRES_PASSWORD: court_nest123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html

      - name: Install dependencies
        run: npm ci
        working-directory: ./api

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        run: npm run start
        # Environment variable used by the `client.js` script to create a new PostgreSQL client.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DB_CONNECTION: pgsql
          DB_HOST: postgres
          DB_PORT: 5432
          POSTGRESQL_DATABASE: nest_api_dev
          POSTGRESQL_USER: court_nestapi
          POSTGRESQL_PASSWORD: court_nest123
        working-directory: ./api

      - name: Generate Typedoc
        run: npm run typedoc
        working-directory: ./api
