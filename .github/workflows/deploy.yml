# Static Deploy On OpensShift
# Builds and Deploys merged PR's to persistent pods/services/routes/etc in the OpenShift Dev environment.
name: Static Deploy on OpensShift

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - dev
      - prod

jobs:
  # Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Build ID: ${{ github.event.number }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)

  # Build the API
  buildAPI:
    name: Build API Static
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      # Checkout the PR branch
      - name: Checkout Target Branch
        uses: actions/checkout@v1

      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.16

      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.SA_TOKEN }}

      # Build the api images
      - name: Build API Images
        working-directory: "./devops/.pipeline/"
        run: |
          npm ci
          npm run oc-build -- --app=api --id=$BUILD_ID --branch=${{ github.base_ref }}
  
  # Build the web frontend app
  buildAPP:
    name: Build App Static
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      # Checkout the PR branch
      - name: Checkout Target Branch
        uses: actions/checkout@v1

      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.16

      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}

      # Build the app images
      - name: Build APP Images
        working-directory: "./app/.pipeline/"
        run: |
          echo Placeholder for app build phase
  # End buildAPP

  # Deploy App, API, and API-MOBILE images in Dev
  deployDev:
    name: Deploy App, API, and API-MOBILE to DEV environment
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == true && github.base_ref != 'prod'}}
    env:
      BUILD_ID: ${{ github.event.number }}
    needs:
      - buildAPI
      - buildAPP
    steps:
      # Checkout the PR branch
      - name: Checkout Target Branch
        uses: actions/checkout@v1

      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.16

      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}

      # Deploy the api
      - name: Deploy
        working-directory: "./devops/.pipeline/"
        run: |
          npm ci
          echo Deploying database
          npm run oc-deploy -- --app=db --id=$BUILD_ID --env=dev
          echo Deploying api
          npm run oc-deploy -- --app=api --id=$BUILD_ID --branch=${{ github.base_ref }}

      # Deploy the api-mobile
      - name: Deploy frontend
        working-directory: "./devops/.pipeline/"
        run: |
          echo Placeholder for front end container deployment


  

  

  
