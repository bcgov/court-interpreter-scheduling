apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: >-
      Reverse proxy sitting in front of KeyCloak, in order to set required headers correctly
      as the OpenShift route does not do this.
labels:
  project: ${PROJECT}
  service: ${SERVICE_NAME}
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        deploymentconfig: ${NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${NAME}
        spec:
          containers:
            - image: ${IMAGE_REGISTRY}/${BUILD_NAMESPACE}/${IMAGE_STREAM_TAG}
              imagePullPolicy: Always
              name: ${NAME}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              ports:
                - containerPort: 8081
              readinessProbe:
                httpGet:
                  path: /auth/realms/master
                  port: 8081
                periodSeconds: 30
                initialDelaySeconds: 2
              livenessProbe:
                httpGet:
                  path: /auth/realms/master
                  port: 8081
                periodSeconds: 30
                initialDelaySeconds: 5
              env:
                - name: UPSTREAM_URI
                  value: ${UPSTREAM_URI}
                - name: HOST_NAME
                  value: ${HOST_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
    spec:
      ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 8081
      selector:
        deploymentconfig: ${NAME}
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${HOST_NAME}
      path: /auth/
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      to:
        kind: Service
        name: ${NAME}
parameters:
  - name: NAME
    value: keycloak-nginx
  - name: PROJECT 
    value: court-interpreter-scheduling
  - name: SERVICE_NAME
    value: keycloak
  - name: REPLICAS
    value: "2"
  - name: CPU_REQUEST
    value: "0.1"
  - name: CPU_LIMIT
    value: "0.5"
  - name: MEMORY_LIMIT
    value: "128M"
  - name: MEMORY_REQUEST
    value: "128M"
  - name: BUILD_NAMESPACE
    required: true
  - name: IMAGE_STREAM_TAG
    required: true
  - name: HOST_NAME
    required: true
  - name: UPSTREAM_URI
    value: http://keycloak
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
