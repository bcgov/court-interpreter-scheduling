apiVersion: v1
kind: Template
metadata:
  labels:
    app: ${NAME}
    build: ${INSTANCE}
    template: ${NAME}-template
    project: ${PROJECT}
  name: api-court-interpreter-scheduler
parameters:
  - name: NAME
    displayName: Name
    description: A suffix appended to all objects
    required: true
    value: api-court-interpreter-scheduler
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: true
    value: "-dev"
  - name: VERSION
    required: true
    value: "1.0"
  - name: SOURCE_CONTEXT_DIR
    required: true
    value: api
  - name: SOURCE_REPOSITORY_URL
    required: true
    value: git@github.com:FreshworksStudio/Court-scheduler.git
  - name: SOURCE_REPOSITORY_REF
    required: false
    value: backend
  - name: BASE_IMAGE_URL
    required: true
    value: registry.access.redhat.com/ubi8/nodejs-10:1-41
  - name: SOURCE_IMAGE_NAME
    required: true
    value: nodejs-10
  - name: SOURCE_IMAGE_TAG
    required: true
    value: "1-41"
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: SOURCE_IMAGE_NAMESPACE
    value: "openshift"
  - name: CPU_LIMIT
    value: "1000m"
  - name: MEMORY_LIMIT
    value: "1Gi"
  - name: CPU_REQUEST
    value: "750m"
  - name: MEMORY_REQUEST
    value: "1Gi"
  - name: TAG
    value: "1"
  - name: INSTANCE
    value: "api-court-interpreter-scheduler-0"
  - name: PROJECT
    value: "api-court-interpreter-scheduler"
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Nodejs Runtime Image
    labels:
      shared: "true"
      instance: ${INSTANCE}
      app: ${NAME}
      project: ${PROJECT}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${NAME}"
    creationTimestamp:
    labels: 
      instance: ${INSTANCE}
      app: ${NAME}
      project: ${PROJECT}
    annotations: {}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector:
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:${TAG}"
    postCommit: {}
    resources:
      limits:
        cpu: ${CPU_LIMIT}
        memory: ${MEMORY_LIMIT}
      requests:
        cpu: ${CPU_REQUEST}
        memory: ${MEMORY_REQUEST}
    runPolicy: SerialLatestOnly
    source:
      contextDir: "${SOURCE_CONTEXT_DIR}"
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      sourceSecret:
        name: "git-secret"
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
      - type: ConfigChange
      - type: ImageChange
  status:
    lastVersion: 7
